// POST - api/login - (user: String, password: String)
interface res_login {
  idusers: string;
  username: string;
} // READY

// GET - api/students - call to initial props
interface students {
  // 10 solvent and 10 insolvent
  [students]: {
    idStudent: {
      name: string;
      dni: string;
      birthdate: Date;
      representative: string;
      balance: number;
      solvent: boolean;
      idStudent: number;
    };
  };
  // Total currently joined
  total: number;
  solventTotal: number;
  insolventTotal: number;
} // READY

// GET - api/students/[section]
interface students {
  [students: number]: {
    idStudent: {
      name: string;
      dni: string;
      birthdate: Date;
      representative: string;
      balance: number;
      solvent: boolean;
      idStudent: number;
    };
  };
} // READY

// GET - api/payments - call to initial props
interface payments {
  today: {
    transfers: number;
    cash: number;
    // Regular Arr
    [dolar: number]: {
      amount: number;
      exchange: number;
      convertion: number;
    };
    total: number;
  };
  month: {
    transfers: number;
    cash: number;
    // Regular Arr
    [dolar: number]: {
      range: string;
      amount: number;
      exchange: number;
      convertion: number;
    };
    total: number;
    receivable: number;
  };

  // Current Month
  advancements: {
    [monthsInAdvance: number]: {
      month: number;
      transfer: number;
      cash: number;
      // Regular Arr
      [dolar: number]: {
        range: string;
        amount: number;
        exchange: number;
        convertion: number;
      };
      total: number;
    };
  };
  arrears: {
    [monthsInArrear: number]: {
      month: number;
      transference: number;
      cash: number;
      // Regular Arr
      [dolar: number]: {
        range: string;
        amount: number;
        exchange: number;
        convertion: number;
      };
      total: number;
    };
  };
} // READY

// GET - api/advancement/[month] - (month: number)
interface advancements {
  [monthsInAdvance: number]: {
    month: number;
    transference: number;
    cash: number;
    // Regular Arr
    [dolar: number]: {
      range: string;
      amount: number;
      exchange: number;
      convertion: number;
      total: number;
    };
    total: number;
  };
} // READY

// GET - api/arrear/[month] - (month: number)
interface arrears {
  [monthsInArrear: number]: {
    month: number;
    transference: number;
    cash: number;
    // Regular Arr
    [dolar: number]: {
      range: string;
      amount: number;
      exchange: number;
      convertion: number;
      total: number;
    };
    total: number;
  };
} // READY

// GET - api/sections - call to initial props
interface sections {
  [idSection: number]: {
    grade: string;
    section: string;
    representativeCant: number;
    studentsCant: number;
    idGrade: number;
    idSection: number;
  };
} // READY

// GET - api/representatives/[section] - ?pattern=string?pag=number
interface representatives {
  [representatives: number]: {
    idRepresentative: {
      name: string;
      dni: string;
      phone: string;
      mail: string;
      balance: number;
      idRepresentative: number;
    };
  };
} // READY

// GET - api/representative/[idRepresentative]
interface representative {
  idRepresentative: number;
  name: string;
  dni: string;
  phone: string;
  email: string;
  balance: number;
  paidMonths: number;
  [students: number]: {
    name: string;
    dni: string;
    relationship: string;
    grade: string;
  };
} // READY

// GET - api/grades
interface grades {
  [grades: number]: {
    idGrade: {
      grade: string;
      sections: number;
      students: number;
      representative: number;
    };
  };
}

// GET api/grade/[id]
interface grade {
  grade: string;
  [sections: number]: {
    idSection: {
      section: string;
      capacity: number;
      idSection: number;
    };
  };
}

// GET api/join
interface join {
  price: number;
  [paymentConcepts: number]: {
    idConcept: {
      concept: string;
      price: number;
      idConcept: number;
    };
  };
}

//GET api/monthlyPayment
interface monthlyPayment {
  price: number;
  [paymentConcepts: number]: {
    idConcept: {
      concept: string;
      price: number;
      idConcept: number;
    };
  };
}

// GET api/products
interface products {
  [products: number]: {
    productId: {
      product: string;
      price: number;
      mandatory: boolean;
    };
  };
}

// GET api/yearRegisters
interface yearRegisters {
  paymentMethods: {
    transference: number;
    cash: number;
    dolar: number;
  };
  [concepts: number]: {
    concept: string;
    amount: number;
    details: {
      transference: number;
      cash: number;
      dolar: number;
      total: number;
    };
  };
  estimatedFund: number;
  paidFund: number;
  finalFund: number;
}

// GET api/monthRegisters/[month]
interface monthRegisters {
  paymentMethods: {
    transference: number;
    cash: number;
    [dolar: number]: {
      range: string;
      amount: number;
      exchange: number;
      convertion: number;
      total: number;
    };
  };

  [concepts: number]: {
    concept: string;
    amount: number;
    details: {
      transference: number;
      cash: number;
      [dolar: number]: {
        range: string;
        amount: number;
        exchange: number;
        convertion: number;
        total: number;
      };
      total: number;
    };
  };

  advancement: {
    [months: number]: {
      month: number;
      transference: number;
      cash: number;
      [dolar: number]: {
        range: string;
        amount: number;
        exchange: number;
        convertion: number;
        total: number;
      };
    };
  };

  arrear: {
    [months: number]: {
      month: number;
      transference: number;
      cash: number;
      [dolar: number]: {
        range: string;
        amount: number;
        exchange: number;
        convertion: number;
        total: number;
      };
    };
  };

  estimatedFund: number;
  paidFund: number;
  finalFund: number;
}

// GET api/register/month ?pag=number
interface registers {
  [registers: number]: {
    idRegister: {
      date: Date;
      method: string;
      amount: number;
      referencce: string;
      representative: string;
      detail: string;
    };
  };
}
